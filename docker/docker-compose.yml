version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    build: .
    # restart: always
    ports:
      - "8000:80"
      - "443:443"
    env_file:
      - ./.env 
    environment:
    - ENV=${ENV}
    - DOMAIN_NAME=${DOMAIN_NAME}
    - BACKEND_HOST=${BACKEND_HOST}
    - BACKEND_PORT=${USER_PORT}
    volumes:
      - ./nginx/nginx.${ENV}.conf:/etc/nginx/nginx.conf
      - /etc/ssl/certs:/etc/nginx/ssl/certs:ro  
      - /etc/ssl/private:/etc/nginx/ssl/private:ro 
    networks:
      - ace-net
    depends_on:
      - user

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - ace-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 3s

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
      - 8080:80 
    environment:
      PMA_ARBITRARY: 1 
      PMA_HOSTS: user-db
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD} 
    networks:
      - ace-net
    
  user:
      build: ../services/user
      env_file:
        - ../services/user/.env
      ports:
        - 5000:5000
      environment:
        - NODE_ENV=${NODE_ENV}
      depends_on:
        user-db:
          condition: service_healthy
        redis:
          condition: service_healthy
      networks:
        - ace-net

  user-db:
    image: mysql:8.0
    container_name: user-db
    restart: always
    env_file:
      - ../services/user/.env
    environment: 
      MYSQL_ROOT_PASSWORD: Acepick@123
      MYSQL_DATABASE: index
    ports:
      - 3306:3306
    volumes:
      - user-data:/var/lib/mysql
    networks:
      - ace-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] 
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  user-data:

networks:
  ace-net:
    driver: bridge
